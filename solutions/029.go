// Distinct powers
// How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

package main

import (
	"fmt"
	"math"
)

func makeRange(min, max int) []int {
	a := make([]int, max-min+1)
	for i := range a {
		a[i] = min + i
	}
	return a
}

func powers(a, b []int) []int {
	var powerArray []int = nil
	var term int
	for i := 0; i < len(a); i++ {
		for j := 0; j < len(b); j++ {
			term = int(math.Pow(float64(a[i]), float64(b[j])))
			powerArray = append(powerArray, term)
		}
	}
	return powerArray
}

func unique(arr []int) []int {
	occured := map[int]bool{}
	result := []int{}
	for e := range arr {

		if occured[arr[e]] != true {
			occured[arr[e]] = true

			result = append(result, arr[e])
		}
	}

	return result
}

func main() {
	a := makeRange(2, 100)
	b := makeRange(2, 100)

	powerArray := powers(a, b)
	distinctPowers := unique(powerArray)
	fmt.Println(len(distinctPowers), len(powerArray))

}
